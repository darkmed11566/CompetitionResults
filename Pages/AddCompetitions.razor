@inject CompetitionResults.Data.Repository.CompetitionRepository competitionRepository; 
@page "/addCompetitions"
@using EnumsAndConstants

<div class="row">
    <div class="col">
        <input class=" form-control" placeholder="Conpetition Name" @bind="newCompetitionName" />
        <input class=" form-control" type="date" placeholder="Competition Start Data" @bind="newCompetitionStartData" />
        <input class=" form-control" type="date" placeholder="Competition End Data" @bind="newCompetitionEndData" />
        <input class=" form-control" type="checkbox" @bind="newRating" />

        <select class=" form-control" name="Country" @bind="newCountry">
            @foreach (var country in Enum.GetValues(typeof(ListOfCountries)))
            {
                <option value="@country">
                    @country;
                </option>
            }
        </select>

        <select class=" form-control" name="Type" @bind="newType">
            @foreach (var type in Enum.GetValues(typeof(CompetitionType)))
            {
                <option value="@type">
                    @type;
                </option>
            }
        </select>


        <div class=" col">
            <button class=" btn btn-success" @onclick="AddCompetition">Add Competition</button>
        </div>
    </div>
</div>

<div class=" container-fluid">
    <div class=" row">
        <div class="col">
            <h2>List of Competitions</h2>
            <table class=" table table-striped">
                <thead class=" table-dark">
                    <tr>
                        <th scope="col">Conpetition Name </th>
                        <th scope="col">Competition Start Data </th>
                        <th scope="col">Competition Endt Data</th>
                        <th scope="col">Rating </th>
                        <th scope="col">Country </th>
                        <th scope="col"> Competition Type</th>
                        <th scope="col"> Competition Status</th>
                    </tr>
                </thead>
                @foreach (var item in competition)
                {
                    <tbody>
                        <tr>
                            <td>
                                @item.CompetitionName
                            </td>
                            <td>
                                @item.CompetitionStartData
                            </td>
                            <td>
                                @item.CompetitionEndtData
                            </td>
                            <td>
                                @item.Rating
                            </td>
                            <td>
                                @item.Country
                            </td>
                            <td>
                                @item.Type
                            </td>
                            <td>
                                @item.Status
                            </td>
                            <td>
                                <button class=" btn-dark">Edite</button>
                            </td>
                            <td>
                                <button class=" btn-danger" @onclick="(()=>DeleteCompetition(item.Id))">Delete</button>
                            </td>

                        </tr>
                    </tbody>
                }

            </table>
        </div>
    </div>
</div>

@code {
    private IEnumerable<Competition> competition = new List<Competition>();

    private string newCompetitionName;
    private DateTime newCompetitionStartData;
    private DateTime newCompetitionEndData;
    private bool newRating;
    private ListOfCountries newCountry;
    private CompetitionType newType;

    private void AddCompetition()
    {

        var dbCompetition = new Competition();

        dbCompetition.CompetitionName=newCompetitionName;
        dbCompetition.CompetitionStartData = newCompetitionStartData;
        dbCompetition.IsActive = true;
        dbCompetition.CompetitionEndtData = newCompetitionEndData;
        dbCompetition.Country = newCountry;
        dbCompetition.Rating = newRating;
        dbCompetition.Type = newType;
        dbCompetition.Status = CompetitionStatus.Planned;

        competitionRepository.Save(dbCompetition);
    }

    private void DeleteCompetition(long id)
    {
        competitionRepository.Remove(id);
    }
}
