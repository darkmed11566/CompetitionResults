@inject CompetitionResults.Data.Repository.CompetitionerRepository competitionerRepository;
@page "/addCompetitioners"
@using EnumsAndConstants

<div class="row">
    <div class="col">
        <input class=" form-control" placeholder="Name" @bind="newNumber" />
                
        <select class=" form-control" name="Country" @bind="newClass">
            @foreach (var boatClass in Enum.GetValues(typeof(BoatClasses)))
            {
                <option value="@boatClass">
                    @boatClass;
                </option>
            }
        </select>
       
        <div class=" col">
            <button class=" btn btn-success" @onclick="AddCompetitioner">Add Competitioner</button>
        </div>
    </div>
</div>

<div class=" container-fluid">
    <div class=" row">
        <div class="col">
            <h2>List of spostsmans</h2>
            <table class=" table table-striped">
                <thead class=" table-dark">
                    <tr>
                        <th scope="col">Number </th>
                        <th scope="col">BoatClass </th> 
                    </tr>
                </thead>
                @foreach (var item in competitioner)
                {
                    <tbody>
                        <tr>
                            <td>
                                @item.Number
                            </td>
                            <td>
                                @item.Class
                            </td>                           
                            <td>
                                <button class=" btn-dark">Edite</button>
                            </td>
                            <td>
                                <button class=" btn-danger" @onclick="(()=>DeleteCompetitioner(item.Id))">Delete</button>
                            </td>
                        </tr>
                    </tbody>
                }

            </table>
        </div>
    </div>
</div>

@code {
    private IEnumerable<Competitioner> competitioner = new List<Competitioner>();

    protected override void OnInitialized()
    {
        competitioner = competitionerRepository.GetAll();

    }

    private int newNumber;
    private BoatClasses newClass;

    private void AddCompetitioner()
    {

        var dbCompetitioner = new Competitioner();

        dbCompetitioner.Number = newNumber;
        dbCompetitioner.Class = newClass;
        dbCompetitioner.IsActive = true;

        competitionerRepository.Save(dbCompetitioner);

    }

    private void DeleteCompetitioner(long id)
    {
        competitionerRepository.Remove(id);
    }
}
